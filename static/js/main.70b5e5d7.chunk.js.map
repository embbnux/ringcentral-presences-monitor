{"version":3,"sources":["RingCentralClient.js","useStorage.js","components/LoginPanel/index.js","components/PresenceModal/index.js","components/HomePanel/index.js","components/DeviceMenu/index.js","App.js","serviceWorker.js","index.js"],"names":["RingCentralClient","sdk","Object","classCallCheck","this","_sdk","_platform","platform","_deviceId","loggedIn","result","loginUrl","window","location","assign","loginOptions","parseLoginRedirect","search","code","login","logout","filters","subscription","createSubscription","cachedSubscriptionData","cache","getItem","setSubscription","e","console","error","setEventFilters","_subscription","on","events","subscribeSuccess","renewSuccess","_this","setItem","register","_context5","t0","get","response","data","json","records","devicesResponse","devices","call","extensionNumber","post","concat","telephonySessionId","mode","deviceId","delete","id","auth","owner_id","useStorage","useGlobalStorage","storageOptions","name","useStyles","makeStyles","theme","heroContent","backgroundColor","palette","background","paper","padding","spacing","heroButtons","marginTop","LoginPanel","_ref","onLogin","classes","react_default","a","createElement","className","Container","maxWidth","Typography","component","variant","align","color","gutterBottom","paragraph","Grid","container","justify","item","Button","onClick","modalContent","position","width","boxShadow","shadows","outline","table","minWidth","getModalStyle","top","left","transform","PresenceModal","opened","presence","onClose","superviseCall","endCall","_React$useState","React","useState","modalStyle","slicedToArray","Modal","open","style","extension","telephonyStatus","Table","size","TableHead","TableRow","TableCell","TableBody","activeCalls","filter","c","map","key","scope","direction","from","to","startTime","ButtonGroup","aria-label","paddingTop","tr","&:hover","cursor","DEFAULT_PRESENCES","Home","ownerId","loadPresences","_useStorage","_useStorage2","presences","setPresences","_useState","_useState2","setPresence","_useState3","_useState4","setOpened","useEffect","onNotification","newPresences","presenseIndex","findIndex","p","body","extensionId","objectSpread","notification","removeListener","_initData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","initData","Fab","_callee2","_context2","Refresh_default","row","presenceStatus","dndStatus","length","components_PresenceModal","DeviceMenu","loadDevices","onDeviceIdChanged","anchorEl","setAnchorEl","setDevices","setDeviceId","initDevices","_ref2","activeDevice","d","status","find","handleClose","device","Fragment","aria-controls","aria-haspopup","event","currentTarget","title","Menu","keepMounted","Boolean","MenuItem","computerName","root","flexGrow","center","display","flexDirection","alignItems","menuButton","marginRight","App","client","ready","setReady","authState","setAuthState","_checkLogin","isLogined","resetAuthState","sub","checkLogin","refreshError","abrupt","indexOf","loginFromCodeQuery","process","mainPage","HomePanel","_ref3","_callee3","_context3","_x","_x2","_ref4","_callee4","_context4","_x3","components_LoginPanel","gotologinPage","CircularProgress","logoutButton","deviceMenu","_callee5","AppBar","Toolbar","hostname","match","rcSDK","RingCentral","server","appKey","appSecret","redirectUri","ringcentralClient","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.70b5e5d7.chunk.js","sourcesContent":["class RingCentralClient {\n  constructor(sdk) {\n    this._sdk = sdk;\n    this._platform = sdk.platform();\n    this._deviceId = null;\n  }\n\n  async checkLogin() {\n    const result = await this._platform.loggedIn();\n    return result;\n  }\n\n  async gotologinPage() {\n    const loginUrl = this._platform.loginUrl();\n    window.location.assign(loginUrl);\n  }\n\n  async loginFromCodeQuery() {\n    const loginOptions = this._platform.parseLoginRedirect(window.location.search);\n    if (loginOptions.code) {\n      await this._platform.login(loginOptions);\n      return true;\n    }\n    return false;\n  }\n\n  async logout() {\n    this._sdk.platform().logout();\n  }\n\n  async createSubscription(filters = []) {\n    const cacheKey = 'subscribeKey';\n    const subscription = this._sdk.createSubscription();\n    const cachedSubscriptionData = this._sdk.cache().getItem(cacheKey);\n    if (cachedSubscriptionData) {\n      try {\n        subscription.setSubscription(cachedSubscriptionData); \n      } catch (e) {\n        console.error('Cannot set subscription data', e);\n      }\n    } else {\n      subscription.setEventFilters(filters);\n    }\n    this._subscription = subscription;\n    subscription.on([subscription.events.subscribeSuccess, subscription.events.renewSuccess], () => {\n      this._sdk.cache().setItem(cacheKey, subscription.subscription());\n    });\n    try {\n      await subscription.register();\n    } catch (e) {\n      console.error('Cannot register subscription', e);\n    }\n    return subscription;\n  }\n\n  async loadPresences() {\n    const response = await this._platform.get('/account/~/presence?detailedTelephonyState=true');\n    const data = response.json();\n    return data.records;\n  }\n\n  async loadDevices() {\n    const devicesResponse = await this._platform.get('/account/~/extension/~/device');\n    const devices = devicesResponse.json().records;\n    return devices;\n  }\n\n  async superviseCall(call, extensionNumber) {\n    if (!this._deviceId) {\n      return;\n    }\n    await this._platform.post(`/account/~/telephony/sessions/${call.telephonySessionId}/supervise`, {\n      mode: 'Listen',\n      extensionNumber,\n      deviceId: this._deviceId\n    });\n  }\n\n  async endCall(call) {\n    await this._platform.delete(`/account/~/telephony/sessions/${call.telephonySessionId}`);\n  }\n\n  setDeviceId(id) {\n    this._deviceId = id;\n  }\n\n  get subscription() {\n    return this._subscription;\n  }\n\n  get platform() {\n    return this._platform;\n  }\n\n  get ownerId() {\n    return this._platform.auth().data().owner_id;\n  }\n}\n\nexport default RingCentralClient;\n","import useGlobalStorage from 'use-global-storage';\n\nconst useStorage = useGlobalStorage({\n  storageOptions: { name: 'call-supervise-data' }\n});\n\nexport default useStorage;\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nfunction LoginPanel({ onLogin }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Presences Monitor\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          A app for admin to  supervise calls under their RingCentral account.\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" onClick={onLogin}>\n                Login with RingCentral account\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default LoginPanel;\n","import React from 'react';\n\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  modalContent: {\n    position: 'absolute',\n    width: 800,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: 'none',\n  },\n  table: {\n    minWidth: 800,\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nfunction PresenceModal({ opened, presence, onClose, superviseCall, endCall }) {\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n  return (\n    <Modal open={opened} onClose={onClose} >\n      <div className={classes.modalContent} style={modalStyle}>\n        <Typography variant=\"h6\">\n          {presence.extension && presence.extension.extensionNumber} | {presence.telephonyStatus}\n        </Typography>\n        <Typography variant=\"h6\">\n          Calls:\n        </Typography>\n        <Table className={classes.table} size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Direction</TableCell>\n              <TableCell align=\"right\">Telephony Status</TableCell>\n              <TableCell align=\"right\">From</TableCell>\n              <TableCell align=\"right\">To</TableCell>\n              <TableCell align=\"right\">Start Time</TableCell>\n              <TableCell align=\"right\">Operation</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {presence.activeCalls && presence.activeCalls.filter(c => c.telephonyStatus !== 'NoCall').map(call => (\n              <TableRow\n                key={call.id}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {call.direction}\n                </TableCell>\n                <TableCell align=\"right\">{call.telephonyStatus}</TableCell>\n                <TableCell align=\"right\">{call.from}</TableCell>\n                <TableCell align=\"right\">{call.to}</TableCell>\n                <TableCell align=\"right\">{call.startTime}</TableCell>\n                <TableCell align=\"right\">\n                  <ButtonGroup size=\"small\" aria-label=\"Small outlined contained primary button group\">\n                    <Button onClick={() => endCall(call)}>\n                      End\n                    </Button>\n                    <Button onClick={() => superviseCall(call, presence.extension.extensionNumber)}>\n                      Supervise\n                    </Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </Modal>\n  );\n}\n\nexport default PresenceModal;\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Fab from '@material-ui/core/Fab';\n\nimport PresenceModal from '../PresenceModal';\n\nimport useStorage from '../../useStorage';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingTop: '20px',\n  },\n  table: {\n    minWidth: 650,\n  },\n  tr: {\n    '&:hover': {\n      background: \"#f3f3f3\",\n      cursor: 'pointer',\n     }\n  }\n}));\n\nconst DEFAULT_PRESENCES = [];\n\nfunction Home({ ownerId, loadPresences, subscription, superviseCall, endCall }) {\n  const classes = useStyles();\n  const [presences, setPresences] = useStorage(`${ownerId}-presencesData`, DEFAULT_PRESENCES);\n  const [presence, setPresence] = useState({});\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    if (!subscription) {\n      return;\n    }\n    const onNotification = (data) => {\n      const newPresences = [].concat(presences);\n      const presenseIndex = newPresences.findIndex((p) => p.extension.id === data.body.extensionId);\n      if (presenseIndex > -1) {\n        newPresences[presenseIndex] = {\n          ...newPresences[presenseIndex],\n          ...data.body,\n          activeCalls: data.body.activeCalls && data.body.activeCalls.filter(c => c.telephonyStatus !== 'NoCall'),\n        };\n        setPresences(newPresences);\n      }\n      if (presence.extension && presence.extension.id === data.body.extensionId) {\n        setPresence({\n          ...presence,\n          ...data.body,\n        });\n      }\n    }\n    subscription.on(subscription.events.notification, onNotification);\n    return () => {\n      subscription.removeListener(subscription.events.notification, onNotification)\n    };\n  }, [subscription, presences, presence]);\n\n  useEffect(() => {\n    async function initData() {\n      if (presences === DEFAULT_PRESENCES) {\n        const records = await loadPresences();\n        setPresences(records);\n      }\n    }\n    initData();\n  }, [presences]);\n\n  return (\n    <Container maxWidth=\"md\" component=\"main\" className={classes.container}>\n      <Fab color=\"primary\" aria-label=\"Refresh\" onClick={async () => {\n        setPresences([]);\n        const records = await loadPresences();\n        setPresences(records);\n      }}>\n        <RefreshIcon />\n      </Fab>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Extension</TableCell>\n            <TableCell align=\"right\">Presence Status</TableCell>\n            <TableCell align=\"right\">Telephony Status</TableCell>\n            <TableCell align=\"right\">Dnd Status</TableCell>\n            <TableCell align=\"right\">Active Calls</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {presences.map(row => (\n            <TableRow\n              key={row.extension.id}\n              className={classes.tr}\n              onClick={() => {\n                setPresence(row);\n                setOpened(true);\n              }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.extension.extensionNumber}\n              </TableCell>\n              <TableCell align=\"right\">{row.presenceStatus}</TableCell>\n              <TableCell align=\"right\">{row.telephonyStatus}</TableCell>\n              <TableCell align=\"right\">{row.dndStatus}</TableCell>\n              <TableCell align=\"right\">{(row.activeCalls && row.activeCalls.length) || 0}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <PresenceModal\n        opened={opened}\n        onClose={() => { setOpened(false); }}\n        presence={presence}\n        superviseCall={superviseCall}\n        endCall={endCall}\n      />\n    </Container>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport useStorage from '../../useStorage';\n\nexport default function DeviceMenu({ loadDevices, ownerId, onDeviceIdChanged }) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [deviceId, setDeviceId] = useStorage(`${ownerId}-deviceId`, null);\n\n  const initDevices = async () => {\n    const devices = await loadDevices();\n    const activeDevice = devices.filter(d => d.status === 'Online');\n    setDevices(activeDevice);\n    const currentDevice = activeDevice.find(d => d.id === deviceId);\n    if (!currentDevice && activeDevice.length) {\n      setDeviceId(activeDevice[0].id);\n      onDeviceIdChanged(activeDevice[0].id)\n    } else {\n      onDeviceIdChanged(deviceId)\n    }\n  }\n\n  useEffect(() => {\n    initDevices();\n  }, []);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const device = devices.find(d => d.id === deviceId);\n  return (\n    <>\n      <Button color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} title=\"Select devices\">\n        {(device && device.name) || 'Select device'}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {\n          devices.map(d =>\n            <MenuItem\n              key={d.id}\n              onClick={() => {\n                handleClose();\n                setDeviceId(d.id);\n                onDeviceIdChanged(d.id);\n              }}\n            >\n              {d.name} - {d.computerName}\n            </MenuItem>\n          )\n        }\n      </Menu>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport useStorage from './useStorage';\n\nimport LoginPanel from './components/LoginPanel';\nimport HomePanel from './components/HomePanel';\nimport DeviceMenu from './components/DeviceMenu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  center: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App({ client }) {\n  const classes = useStyles();\n  const [ready, setReady] = useState(false);\n  const [authState, setAuthState] = useStorage('authState', false);\n\n  const [_, setSubscription] = useState(null);\n\n  useEffect(() => {\n    async function checkLogin() {\n      const isLogined = await client.checkLogin()\n      setAuthState(isLogined)\n      if (isLogined) {\n        const resetAuthState = () => {\n          setAuthState(false);\n        }\n        client.platform.on(client.platform.events.refreshError, resetAuthState);\n        const sub = await client.createSubscription(['/account/~/presence?detailedTelephonyState=true']);\n        setSubscription(sub);\n        setReady(true)\n        return () => {\n          client.platform.removeListener(client.platform.events.refreshError, resetAuthState);\n        };\n      }\n      // Not login\n      if (window.location.search.indexOf('code=') === -1) {\n        setReady(true)\n        return;\n      }\n      const loginResult = await client.loginFromCodeQuery();\n      if (loginResult) {\n        window.location.assign(process.env.REACT_APP_RINGCENTRAL_REDIRECT_URI);\n      }\n    }\n    checkLogin();\n  }, []);\n\n  let mainPage = null;\n  if (!ready) {\n    mainPage = (<div className={classes.center}><CircularProgress /></div>);\n  } else if (!authState) {\n    mainPage = (\n      <LoginPanel\n        onLogin={() => {\n          client.gotologinPage();\n        }}\n      />\n    );\n  } else {\n    mainPage = (\n      <HomePanel\n        loadPresences={async () => {\n          const data = await client.loadPresences();\n          return data;\n        }}\n        superviseCall={async (call, extensionNumber) => {\n          await client.superviseCall(call, extensionNumber);\n        }}\n        endCall={async (call) => {\n          await client.endCall(call)\n        }}\n        subscription={client.subscription}\n        ownerId={client.ownerId}\n      />\n    );\n  }\n\n  const logoutButton = authState ? (\n    <Button\n      color=\"inherit\"\n      onClick={() => {\n        setAuthState(false);\n        client.logout();\n      }}\n    >\n      Logout\n    </Button>\n  ) : null;\n\n  const deviceMenu = authState ? (\n    <DeviceMenu\n      loadDevices={async () => {\n        const data = await client.loadDevices();\n        return data\n      }}\n      onDeviceIdChanged={(id) => client.setDeviceId(id)}\n      ownerId={client.ownerId}\n    />\n  ) : null;\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            RingCentral Presences Monitor\n          </Typography>\n          {deviceMenu}\n          {logoutButton}\n        </Toolbar>\n      </AppBar>\n      {mainPage}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RingCentral from 'ringcentral';\nimport RingCentralClient from './RingCentralClient';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rcSDK = new RingCentral({\n  server: process.env.REACT_APP_RINGCENTRAL_SERVER,\n  appKey: process.env.REACT_APP_RINGCENTRAL_APP_CLIENT_ID,\n  appSecret: process.env.REACT_APP_RINGCENTRAL_APP_CLIENT_SECRET,\n  redirectUri: process.env.REACT_APP_RINGCENTRAL_REDIRECT_URI,\n});\nwindow.ringcentralClient = new RingCentralClient(rcSDK);\n\nReactDOM.render(<App client={window.ringcentralClient} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}