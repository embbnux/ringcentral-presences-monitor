{"version":3,"sources":["useStorage.js","components/LoginPanel/index.js","components/PresenceModal/index.js","components/HomePanel/index.js","App.js","serviceWorker.js","index.js"],"names":["useStorage","useGlobalStorage","storageOptions","name","useStyles","makeStyles","theme","heroContent","backgroundColor","palette","background","paper","padding","spacing","heroButtons","marginTop","LoginPanel","_ref","onLogin","classes","react_default","a","createElement","className","Container","maxWidth","Typography","component","variant","align","color","gutterBottom","paragraph","Grid","container","justify","item","Button","onClick","modalContent","position","width","boxShadow","shadows","outline","table","minWidth","getModalStyle","top","concat","left","transform","PresenceModal","opened","presence","onClose","superviseCall","endCall","_React$useState","React","useState","modalStyle","Object","slicedToArray","Modal","open","style","extension","extensionNumber","telephonyStatus","Table","size","TableHead","TableRow","TableCell","TableBody","activeCalls","filter","c","map","call","key","id","scope","direction","from","to","startTime","ButtonGroup","aria-label","paddingTop","tr","&:hover","cursor","DEFAULT_PRESENCES","Home","loadPresences","subscription","_useStorage","_useStorage2","presences","setPresences","_useState","_useState2","setPresence","_useState3","_useState4","setOpened","useEffect","onNotification","data","console","log","newPresences","presenseIndex","findIndex","p","body","extensionId","objectSpread","on","events","notification","removeListener","_initData","asyncToGenerator","regenerator_default","mark","_callee","records","wrap","_context","prev","next","sent","stop","apply","this","arguments","initData","Fab","_callee2","_context2","Refresh_default","row","presenceStatus","dndStatus","length","components_PresenceModal","root","flexGrow","center","display","flexDirection","alignItems","menuButton","marginRight","title","createSubscription","cachedSubscriptionData","window","rcSDK","cache","getItem","setSubscription","e","error","setEventFilters","subscribeSuccess","renewSuccess","setItem","register","t0","abrupt","App","ready","setReady","authState","setAuthState","rcPlatform","_checkLogin","isLogined","resetAuthState","sub","loginOptions","loggedIn","refreshError","location","search","indexOf","parseLoginRedirect","code","login","assign","process","checkLogin","mainPage","HomePanel","_callee3","response","_context3","get","json","_ref3","_callee4","devicesResponse","devices","device","_context4","post","telephonySessionId","mode","deviceId","_x","_x2","_ref4","_callee5","_context5","delete","_x3","components_LoginPanel","loginUrl","CircularProgress","logoutButton","platform","logout","Fragment","AppBar","Toolbar","Boolean","hostname","match","RingCentral","server","appKey","appSecret","redirectUri","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"8PAMeA,QAJIC,GAAiB,CAClCC,eAAgB,CAAEC,KAAM,2CCMpBC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,YAAa,CACXC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,QAASN,EAAMO,QAAQ,EAAG,EAAG,IAE/BC,YAAa,CACXC,UAAWT,EAAMO,QAAQ,OA8BdG,MA1Bf,SAAAC,GAAiC,IAAXC,EAAWD,EAAXC,QACdC,EAAUf,IAEhB,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQZ,aACtBa,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,SAAS,MAClBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,SAASC,MAAM,cAAcC,cAAY,GAAvF,kBAGAX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYE,QAAQ,KAAKC,MAAM,SAASC,MAAM,gBAAgBE,WAAS,GAAvE,wEAGAZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQL,aACtBM,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAGsB,QAAQ,UAClCf,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMG,MAAI,GACRhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQT,QAAQ,YAAYE,MAAM,UAAUQ,QAASpB,GAArD,iJCpBRd,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCiC,aAAc,CACZC,SAAU,WACVC,MAAO,IACPjC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1C+B,UAAWpC,EAAMqC,QAAQ,GACzB/B,QAASN,EAAMO,QAAQ,GACvB+B,QAAS,QAEXC,MAAO,CACLC,SAAU,QAId,SAASC,IAIP,MAAO,CACLC,IAAG,GAAAC,OAJO,GAIP,KACHC,KAAI,GAAAD,OAJO,GAIP,KACJE,UAAS,cAAAF,OANC,GAMD,QAAAA,OALE,GAKF,OA0DEG,MAtDf,SAAAnC,GAA8E,IAArDoC,EAAqDpC,EAArDoC,OAAQC,EAA6CrC,EAA7CqC,SAAUC,EAAmCtC,EAAnCsC,QAASC,EAA0BvC,EAA1BuC,cAAeC,EAAWxC,EAAXwC,QAAWC,EACvDC,IAAMC,SAASb,GAA7Bc,EADqEC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,MAEtEvC,EAAUf,IAChB,OACEgB,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOC,KAAMZ,EAAQE,QAASA,GAC5BnC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQoB,aAAc2B,MAAOL,GAC3CzC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYE,QAAQ,MACjB0B,EAASa,WAAab,EAASa,UAAUC,gBAD5C,MACgEd,EAASe,iBAEzEjD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYE,QAAQ,MAApB,UAGAR,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAO/C,UAAWJ,EAAQ0B,MAAO0B,KAAK,SACpCnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACEpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,kBACAtD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,oBACAT,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,QACAT,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,MACAT,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,cACAT,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,eAGJT,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACGrB,EAASsB,aAAetB,EAASsB,YAAYC,OAAO,SAAAC,GAAC,MAA0B,WAAtBA,EAAET,kBAA8BU,IAAI,SAAAC,GAAI,OAChG5D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEQ,IAAKD,EAAKE,IAEV9D,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW/C,UAAU,KAAKwD,MAAM,OAC7BH,EAAKI,WAERhE,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAASmD,EAAKX,iBAC/BjD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAASmD,EAAKK,MAC/BjE,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAASmD,EAAKM,IAC/BlE,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAASmD,EAAKO,WAC/BnE,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SACfT,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAajB,KAAK,QAAQkB,aAAW,iDACnCrE,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,QAAS,kBAAMmB,EAAQuB,KAA/B,OAGA5D,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,QAAS,kBAAMkB,EAAcwB,EAAM1B,EAASa,UAAUC,mBAA9D,uBC9DdhE,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC4B,UAAW,CACTwD,WAAY,QAEd7C,MAAO,CACLC,SAAU,KAEZ6C,GAAI,CACFC,UAAW,CACTlF,WAAY,UACZmF,OAAQ,eAKRC,EAAoB,GAkGXC,MAhGf,SAAA9E,GAAuE,IAAvD+E,EAAuD/E,EAAvD+E,cAAeC,EAAwChF,EAAxCgF,aAAczC,EAA0BvC,EAA1BuC,cAAeC,EAAWxC,EAAXwC,QACpDtC,EAAUf,IADqD8F,EAEnClG,EAAW,gBAAiB8F,GAFOK,EAAArC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAE9DE,EAF8DD,EAAA,GAEnDE,EAFmDF,EAAA,GAAAG,EAGrC1C,mBAAS,IAH4B2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAG9DhD,EAH8DiD,EAAA,GAGpDC,EAHoDD,EAAA,GAAAE,EAIzC7C,oBAAS,GAJgC8C,EAAA5C,OAAAC,EAAA,EAAAD,CAAA2C,EAAA,GAI9DpD,EAJ8DqD,EAAA,GAItDC,EAJsDD,EAAA,GA6CrE,OAvCAE,oBAAU,WACR,GAAKX,EAAL,CAGA,IAAMY,EAAiB,SAACC,GACtBC,QAAQC,IAAIF,GACZ,IAAMG,EAAe,GAAGhE,OAAOmD,GACzBc,EAAgBD,EAAaE,UAAU,SAACC,GAAD,OAAOA,EAAEjD,UAAUe,KAAO4B,EAAKO,KAAKC,cAC7EJ,GAAiB,IACnBD,EAAaC,GAAbpD,OAAAyD,EAAA,EAAAzD,CAAA,GACKmD,EAAaC,GACbJ,EAAKO,KAFV,CAGEzC,YAAakC,EAAKO,KAAKzC,aAAekC,EAAKO,KAAKzC,YAAYC,OAAO,SAAAC,GAAC,MAA0B,WAAtBA,EAAET,oBAE5EgC,EAAaY,IAEX3D,EAASa,WAAab,EAASa,UAAUe,KAAO4B,EAAKO,KAAKC,aAC5Dd,EAAY1C,OAAAyD,EAAA,EAAAzD,CAAA,GACPR,EACAwD,EAAKO,QAKd,OADApB,EAAauB,GAAGvB,EAAawB,OAAOC,aAAcb,GAC3C,WACLZ,EAAa0B,eAAe1B,EAAawB,OAAOC,aAAcb,MAE/D,CAACZ,EAAcG,EAAW9C,IAE7BsD,oBAAU,WAAM,SAAAgB,IAAA,OAAAA,EAAA9D,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAzG,EAAA0G,KACd,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAzG,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACMjC,IAAcN,EADpB,CAAAqC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAE0BrC,IAF1B,OAEUiC,EAFVE,EAAAG,KAGIjC,EAAa4B,GAHjB,wBAAAE,EAAAI,SAAAP,OADcQ,MAAAC,KAAAC,YAAA,WAAAd,EAAAY,MAAAC,KAAAC,WAOdC,IACC,CAACvC,IAGFhF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,SAAS,KAAKE,UAAU,OAAOJ,UAAWJ,EAAQe,WAC3Dd,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAK9G,MAAM,UAAU2D,aAAW,UAAUnD,QAAOwB,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAzG,EAAA0G,KAAE,SAAAc,IAAA,IAAAZ,EAAA,OAAAH,EAAAzG,EAAA6G,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cACjDhC,EAAa,IADoCyC,EAAAT,KAAA,EAE3BrC,IAF2B,OAE3CiC,EAF2Ca,EAAAR,KAGjDjC,EAAa4B,GAHoC,wBAAAa,EAAAP,SAAAM,OAKjDzH,EAAAC,EAAAC,cAACyH,EAAA1H,EAAD,OAEFD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAO/C,UAAWJ,EAAQ0B,OACxBzB,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACEpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,kBACAtD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,mBACAT,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,oBACAT,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,cACAT,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAjB,kBAGJT,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACGyB,EAAUrB,IAAI,SAAAiE,GAAG,OAChB5H,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEQ,IAAK+D,EAAI7E,UAAUe,GACnB3D,UAAWJ,EAAQwE,GACnBrD,QAAS,WACPkE,EAAYwC,GACZrC,GAAU,KAGZvF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW/C,UAAU,KAAKwD,MAAM,OAC7B6D,EAAI7E,UAAUC,iBAEjBhD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAASmH,EAAIC,gBAC9B7H,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAASmH,EAAI3E,iBAC9BjD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAASmH,EAAIE,WAC9B9H,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAW7C,MAAM,SAAUmH,EAAIpE,aAAeoE,EAAIpE,YAAYuE,QAAW,QAKjF/H,EAAAC,EAAAC,cAAC8H,EAAD,CACE/F,OAAQA,EACRE,QAAS,WAAQoD,GAAU,IAC3BrD,SAAUA,EACVE,cAAeA,EACfC,QAASA,MC7GXrD,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC+I,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,WAAY,CACVC,YAAatJ,EAAMO,QAAQ,IAE7BgJ,MAAO,CACLP,SAAU,MAIRQ,EAAkB,eAAA7I,EAAA6C,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAzG,EAAA0G,KAAG,SAAAC,IAAA,IAAA/B,EAAA8D,EAAA,OAAAjC,EAAAzG,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIzB,GAHiB,eACXpC,EAAe+D,OAAOC,MAAMH,qBAC5BC,EAAyBC,OAAOC,MAAMC,QAAQC,QAFnC,gBAIf,IACElE,EAAamE,gBAAgBL,GAC7B,MAAOM,GACPtD,QAAQuD,MAAM,+BAAgCD,QAGhDpE,EAAasE,gBAAgB,CAAC,oDAXP,OAazBtE,EAAauB,GAAG,CAACvB,EAAawB,OAAO+C,iBAAkBvE,EAAawB,OAAOgD,cAAe,WACxFT,OAAOC,MAAMC,QAAQQ,QAbN,eAawBzE,EAAaA,kBAd7BkC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAiBjBpC,EAAa0E,WAjBI,OAAAxC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyC,GAAAzC,EAAA,SAmBvBpB,QAAQuD,MAAM,+BAAdnC,EAAAyC,IAnBuB,eAAAzC,EAAA0C,OAAA,SAqBlB5E,GArBkB,yBAAAkC,EAAAI,SAAAP,EAAA,kBAAH,yBAAA/G,EAAAuH,MAAAC,KAAAC,YAAA,GAkIToC,MA1Gf,WACE,IAAM3J,EAAUf,IADHkG,EAEa1C,oBAAS,GAFtB2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAENyE,EAFMxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAL,EAGqBlG,EAAW,aAAa,GAH7CmG,EAAArC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAGN+E,EAHM9E,EAAA,GAGK+E,EAHL/E,EAAA,GAKPgF,EAAanB,OAAOmB,WALb1E,EAM2B7C,mBAAS,MANpC8C,EAAA5C,OAAAC,EAAA,EAAAD,CAAA2C,EAAA,GAMNR,EANMS,EAAA,GAMQ0D,EANR1D,EAAA,GAQbE,oBAAU,WAAM,SAAAwE,IAAA,OAAAA,EAAAtH,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAzG,EAAA0G,KACd,SAAAc,IAAA,IAAAwC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1D,EAAAzG,EAAA6G,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EAC0B8C,EAAWM,WADrC,UACQJ,EADRvC,EAAAR,KAEE4C,EAAaG,IACTA,EAHN,CAAAvC,EAAAT,KAAA,gBAIUiD,EAAiB,WACrBJ,GAAa,IAEfC,EAAW3D,GAAG2D,EAAW1D,OAAOiE,aAAcJ,GAPlDxC,EAAAT,KAAA,EAQsByB,IARtB,cAQUyB,EARVzC,EAAAR,KASI8B,EAAgBmB,GAChBP,GAAS,GAVblC,EAAA+B,OAAA,SAWW,WACLM,EAAWxD,eAAewD,EAAW1D,OAAOiE,aAAcJ,KAZhE,YAgBmD,IAA7CtB,OAAO2B,SAASC,OAAOC,QAAQ,SAhBrC,CAAA/C,EAAAT,KAAA,gBAiBI2C,GAAS,GAjBblC,EAAA+B,OAAA,uBAoBQW,EAAexB,OAAOmB,WAAWW,mBAAmB9B,OAAO2B,SAASC,SACzDG,KArBnB,CAAAjD,EAAAT,KAAA,gBAAAS,EAAAT,KAAA,GAsBU2B,OAAOmB,WAAWa,MAAMR,GAtBlC,QAuBIxB,OAAO2B,SAASM,OAAOC,2DAvB3B,yBAAApD,EAAAP,SAAAM,OADcL,MAAAC,KAAAC,YAAA,WAAA0C,EAAA5C,MAAAC,KAAAC,WA2BdyD,IACC,IAEH,IAAIC,EAAW,KAabA,EAZGrB,EAEOE,EAWR7J,EAAAC,EAAAC,cAAC+K,EAAD,CACErG,cAAalC,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAzG,EAAA0G,KAAE,SAAAuE,IAAA,IAAAC,EAAAzF,EAAA,OAAAgB,EAAAzG,EAAA6G,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,cAAAmE,EAAAnE,KAAA,EACU2B,OAAOmB,WAAWsB,IAAI,mDADhC,cACPF,EADOC,EAAAlE,KAEPxB,EAAOyF,EAASG,OAFTF,EAAA3B,OAAA,SAGN/D,EAAKmB,SAHC,wBAAAuE,EAAAjE,SAAA+D,MAKf9I,cAAa,eAAAmJ,EAAA7I,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAzG,EAAA0G,KAAE,SAAA6E,EAAO5H,EAAMZ,GAAb,IAAAyI,EAAAC,EAAAC,EAAA,OAAAjF,EAAAzG,EAAA6G,KAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EACiB2B,OAAOmB,WAAWsB,IAAI,iCADvC,UACPI,EADOG,EAAA1E,KAEPwE,EAAUD,EAAgBH,OAAOzE,QACjC8E,EAASD,EAAQ,GAHV,CAAAE,EAAA3E,KAAA,eAAA2E,EAAAnC,OAAA,wBAAAmC,EAAA3E,KAAA,EAOP2B,OAAOmB,WAAW8B,KAAlB,iCAAAhK,OAAwD+B,EAAKkI,mBAA7D,cAA6F,CACjGC,KAAM,SACN/I,kBACAgJ,SAAUL,EAAO7H,KAVN,wBAAA8H,EAAAzE,SAAAqE,MAAF,gBAAAS,EAAAC,GAAA,OAAAX,EAAAnE,MAAAC,KAAAC,YAAA,GAabjF,QAAO,eAAA8J,EAAAzJ,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAzG,EAAA0G,KAAE,SAAAyF,EAAOxI,GAAP,OAAA8C,EAAAzG,EAAA6G,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EACD2B,OAAOmB,WAAWuC,OAAlB,iCAAAzK,OAA0D+B,EAAKkI,qBAD9D,wBAAAO,EAAAlF,SAAAiF,MAAF,gBAAAG,GAAA,OAAAJ,EAAA/E,MAAAC,KAAAC,YAAA,GAGPzC,aAAcA,IA/BhB7E,EAAAC,EAAAC,cAACsM,EAAD,CACE1M,QAAS,WACP,IAAM2M,EAAW7D,OAAOmB,WAAW0C,WACnC7D,OAAO2B,SAASM,OAAO4B,MANjBzM,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQoI,QAAQnI,EAAAC,EAAAC,cAACwM,EAAA,EAAD,OAuC9C,IAAMC,EAAe9C,EACnB7J,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEP,MAAM,UACNQ,QAAS,WACP4I,GAAa,GACblB,OAAOC,MAAM+D,WAAWC,WAJ5B,UASE,KAEJ,OACE7M,EAAAC,EAAAC,cAACF,EAAAC,EAAM6M,SAAP,KACE9M,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAQ3L,SAAS,UACfpB,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,KACEhN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYE,QAAQ,KAAKL,UAAWJ,EAAQ0I,OAA5C,iCAGCkE,IAGJ3B,ICjJaiC,QACW,cAA7BrE,OAAO2B,SAAS2C,UAEe,UAA7BtE,OAAO2B,SAAS2C,UAEhBtE,OAAO2B,SAAS2C,SAASC,MACvB,2DCVNvE,OAAOC,MAAQ,IAAIuE,IAAY,CAC7BC,OAAQvC,2CACRwC,OAAQxC,yBACRyC,UAAWzC,+CACX0C,YAAa1C,4DAEflC,OAAOmB,WAAanB,OAAOC,MAAM+D,WAEjCa,IAASC,OAAO1N,EAAAC,EAAAC,cAACyN,EAAD,MAASC,SAASC,eAAe,SDiH3C,kBAAmBC,WACrBA,UAAUC,cAAcpE,MAAMqE,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4d468102.chunk.js","sourcesContent":["import useGlobalStorage from 'use-global-storage';\n\nconst useStorage = useGlobalStorage({\n  storageOptions: { name: 'call-supervise-data' }\n});\n\nexport default useStorage;\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nfunction LoginPanel({ onLogin }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Call Supervise\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          A app for admin to  supervise calls under their RingCentral account.\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" onClick={onLogin}>\n                Login with RingCentral Sandbox account\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default LoginPanel;\n","import React from 'react';\n\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  modalContent: {\n    position: 'absolute',\n    width: 800,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: 'none',\n  },\n  table: {\n    minWidth: 800,\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nfunction PresenceModal({ opened, presence, onClose, superviseCall, endCall }) {\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n  return (\n    <Modal open={opened} onClose={onClose} >\n      <div className={classes.modalContent} style={modalStyle}>\n        <Typography variant=\"h6\">\n          {presence.extension && presence.extension.extensionNumber} | {presence.telephonyStatus}\n        </Typography>\n        <Typography variant=\"h6\">\n          Calls:\n        </Typography>\n        <Table className={classes.table} size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Direction</TableCell>\n              <TableCell align=\"right\">Telephony Status</TableCell>\n              <TableCell align=\"right\">From</TableCell>\n              <TableCell align=\"right\">To</TableCell>\n              <TableCell align=\"right\">Start Time</TableCell>\n              <TableCell align=\"right\">Operation</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {presence.activeCalls && presence.activeCalls.filter(c => c.telephonyStatus !== 'NoCall').map(call => (\n              <TableRow\n                key={call.id}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {call.direction}\n                </TableCell>\n                <TableCell align=\"right\">{call.telephonyStatus}</TableCell>\n                <TableCell align=\"right\">{call.from}</TableCell>\n                <TableCell align=\"right\">{call.to}</TableCell>\n                <TableCell align=\"right\">{call.startTime}</TableCell>\n                <TableCell align=\"right\">\n                  <ButtonGroup size=\"small\" aria-label=\"Small outlined contained primary button group\">\n                    <Button onClick={() => endCall(call)}>\n                      End\n                    </Button>\n                    <Button onClick={() => superviseCall(call, presence.extension.extensionNumber)}>\n                      Supervise\n                    </Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    </Modal>\n  );\n}\n\nexport default PresenceModal;\n","import React, { useEffect, useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Fab from '@material-ui/core/Fab';\n\nimport PresenceModal from '../PresenceModal';\n\nimport useStorage from '../../useStorage';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingTop: '20px',\n  },\n  table: {\n    minWidth: 650,\n  },\n  tr: {\n    '&:hover': {\n      background: \"#f3f3f3\",\n      cursor: 'pointer',\n     }\n  }\n}));\n\nconst DEFAULT_PRESENCES = [];\n\nfunction Home({ loadPresences, subscription, superviseCall, endCall }) {\n  const classes = useStyles();\n  const [presences, setPresences] = useStorage('presencesData', DEFAULT_PRESENCES);\n  const [presence, setPresence] = useState({});\n  const [opened, setOpened] = useState(false);\n\n  useEffect(() => {\n    if (!subscription) {\n      return;\n    }\n    const onNotification = (data) => {\n      console.log(data);\n      const newPresences = [].concat(presences);\n      const presenseIndex = newPresences.findIndex((p) => p.extension.id === data.body.extensionId);\n      if (presenseIndex > -1) {\n        newPresences[presenseIndex] = {\n          ...newPresences[presenseIndex],\n          ...data.body,\n          activeCalls: data.body.activeCalls && data.body.activeCalls.filter(c => c.telephonyStatus !== 'NoCall'),\n        };\n        setPresences(newPresences);\n      }\n      if (presence.extension && presence.extension.id === data.body.extensionId) {\n        setPresence({\n          ...presence,\n          ...data.body,\n        });\n      }\n    }\n    subscription.on(subscription.events.notification, onNotification);\n    return () => {\n      subscription.removeListener(subscription.events.notification, onNotification)\n    };\n  }, [subscription, presences, presence]);\n\n  useEffect(() => {\n    async function initData() {\n      if (presences === DEFAULT_PRESENCES) {\n        const records = await loadPresences();\n        setPresences(records);\n      }\n    }\n    initData();\n  }, [presences]);\n\n  return (\n    <Container maxWidth=\"md\" component=\"main\" className={classes.container}>\n      <Fab color=\"primary\" aria-label=\"Refresh\" onClick={async () => {\n        setPresences([]);\n        const records = await loadPresences();\n        setPresences(records);\n      }}>\n        <RefreshIcon />\n      </Fab>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Extension</TableCell>\n            <TableCell align=\"right\">Presence Status</TableCell>\n            <TableCell align=\"right\">Telephony Status</TableCell>\n            <TableCell align=\"right\">Dnd Status</TableCell>\n            <TableCell align=\"right\">Active Calls</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {presences.map(row => (\n            <TableRow\n              key={row.extension.id}\n              className={classes.tr}\n              onClick={() => {\n                setPresence(row);\n                setOpened(true);\n              }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.extension.extensionNumber}\n              </TableCell>\n              <TableCell align=\"right\">{row.presenceStatus}</TableCell>\n              <TableCell align=\"right\">{row.telephonyStatus}</TableCell>\n              <TableCell align=\"right\">{row.dndStatus}</TableCell>\n              <TableCell align=\"right\">{(row.activeCalls && row.activeCalls.length) || 0}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <PresenceModal\n        opened={opened}\n        onClose={() => { setOpened(false); }}\n        presence={presence}\n        superviseCall={superviseCall}\n        endCall={endCall}\n      />\n    </Container>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport useStorage from './useStorage';\n\nimport LoginPanel from './components/LoginPanel';\nimport HomePanel from './components/HomePanel';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  center: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst createSubscription = async () => {\n  const cacheKey = 'subscribeKey';\n  const subscription = window.rcSDK.createSubscription();\n  const cachedSubscriptionData = window.rcSDK.cache().getItem(cacheKey);\n  if (cachedSubscriptionData) {\n    try {\n      subscription.setSubscription(cachedSubscriptionData); \n    } catch (e) {\n      console.error('Cannot set subscription data', e);\n    }\n  } else {\n    subscription.setEventFilters(['/account/~/presence?detailedTelephonyState=true']);\n  }\n  subscription.on([subscription.events.subscribeSuccess, subscription.events.renewSuccess], () => {\n    window.rcSDK.cache().setItem(cacheKey, subscription.subscription());\n  });\n  try {\n    await subscription.register();\n  } catch (e) {\n    console.error('Cannot register subscription', e);\n  }\n  return subscription;\n};\n\nfunction App() {\n  const classes = useStyles();\n  const [ready, setReady] = useState(false);\n  const [authState, setAuthState] = useStorage('authState', false);\n\n  const rcPlatform = window.rcPlatform;\n  const [subscription, setSubscription] = useState(null);\n\n  useEffect(() => {\n    async function checkLogin() {\n      const isLogined = await rcPlatform.loggedIn()\n      setAuthState(isLogined)\n      if (isLogined) {\n        const resetAuthState = () => {\n          setAuthState(false);\n        }\n        rcPlatform.on(rcPlatform.events.refreshError, resetAuthState);\n        const sub = await createSubscription();\n        setSubscription(sub);\n        setReady(true)\n        return () => {\n          rcPlatform.removeListener(rcPlatform.events.refreshError, resetAuthState);\n        };\n      }\n      // Not login\n      if (window.location.search.indexOf('code=') === -1) {\n        setReady(true)\n        return;\n      }\n      const loginOptions = window.rcPlatform.parseLoginRedirect(window.location.search);\n      if (loginOptions.code) {\n        await window.rcPlatform.login(loginOptions);\n        window.location.assign(process.env.REACT_APP_RINGCENTRAL_REDIRECT_URI);\n      }\n    }\n    checkLogin();\n  }, []);\n\n  let mainPage = null;\n  if (!ready) {\n    mainPage = (<div className={classes.center}><CircularProgress /></div>);\n  } else if (!authState) {\n    mainPage = (\n      <LoginPanel\n        onLogin={() => {\n          const loginUrl = window.rcPlatform.loginUrl();\n          window.location.assign(loginUrl);\n        }}\n      />\n    );\n  } else {\n    mainPage = (\n      <HomePanel\n        loadPresences={async () => {\n          const response = await window.rcPlatform.get('/account/~/presence?detailedTelephonyState=true');\n          const data = response.json();\n          return data.records;\n        }}\n        superviseCall={async (call, extensionNumber) => {\n          const devicesResponse = await window.rcPlatform.get('/account/~/extension/~/device');\n          const devices = devicesResponse.json().records;\n          const device = devices[0];\n          if (!device) {\n            return;\n          }\n          await window.rcPlatform.post(`/account/~/telephony/sessions/${call.telephonySessionId}/supervise`, {\n            mode: 'Listen',\n            extensionNumber,\n            deviceId: device.id\n          });\n        }}\n        endCall={async (call) => {\n          await window.rcPlatform.delete(`/account/~/telephony/sessions/${call.telephonySessionId}`);\n        }}\n        subscription={subscription}\n      />\n    );\n  }\n\n  const logoutButton = authState ? (\n    <Button\n      color=\"inherit\"\n      onClick={() => {\n        setAuthState(false);\n        window.rcSDK.platform().logout();\n      }}\n    >\n      Logout\n    </Button>\n  ) : null;\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            RingCentral Presences Monitor\n          </Typography>\n          {logoutButton}\n        </Toolbar>\n      </AppBar>\n      {mainPage}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RingCentral from 'ringcentral';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.rcSDK = new RingCentral({\n  server: process.env.REACT_APP_RINGCENTRAL_SERVER,\n  appKey: process.env.REACT_APP_RINGCENTRAL_APP_CLIENT_ID,\n  appSecret: process.env.REACT_APP_RINGCENTRAL_APP_CLIENT_SECRET,\n  redirectUri: process.env.REACT_APP_RINGCENTRAL_REDIRECT_URI,\n});\nwindow.rcPlatform = window.rcSDK.platform();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}